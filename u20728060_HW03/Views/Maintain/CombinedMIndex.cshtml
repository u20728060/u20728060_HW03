@model u20728060_HW03.Models.MaintainViewModel

@{
    ViewBag.Title = "CombinedMIndex";
}


<link rel="stylesheet" href="https://maxcdn.bootstrapcdn.com/bootstrap/3.3.7/css/bootstrap.min.css">
<script src="https://ajax.googleapis.com/ajax/libs/jquery/3.5.1/jquery.min.js"></script>
<script src="https://maxcdn.bootstrapcdn.com/bootstrap/3.3.7/js/bootstrap.min.js"></script>
<script src="https://code.jquery.com/jquery-latest.ja"></script>

@using PagedList.Mvc
@*<link rel="stylesheet" href="https://maxcdn.bootstrapcdn.com/bootstrap/4.5.2/css/bootstrap.min.css">*@
<style>

    body{
        background-image:url('../Content/Images/Library.jpg')
    }

    h3{
        color:white
    }
    .ul.pagination {
        display: inline-block;
        padding: 0;
        margin: 0;
    }



    ul.pagination li {
        display: inline;
    }

        ul.pagination li a {
            color: black;
            float: left;
            padding: 8px 16px;
            text-decoration: none;
            transition: background-color .3s;
        }

            ul.pagination li a.active {
                background-color: #4CAF50;
                color: white;
            }

            ul.pagination li a:hover:not(.active) {
                background-color: #ddd;
            }

    * {
        box-sizing: border-box;
    }

    .row {
        display: flex;
    }

    .column {
        flex: 50%;
        padding: 5px;
    }

    table {
        table-layout: fixed;
        width: 100%;
    }

    td, th {
        border: 1px solid Black;
        text-align: center;
        padding: 8px;
        width: 25%;
    }
    tr:nth-child(even) {
        background-color: #84a98c;
    }

    tr:nth-child(odd) {
        background-color: #d8e2dc;
    }
</style>
<body>

    <div class="row">
        <div class="col-md-6">
            <h3>Authors</h3>
            <p>
                <a href="#" class="btn btn-primary create-author-link" data-url="@Url.Action("Create", "authors")">Create a new Author</a>
            </p>

            <table class="table" style="width:100%">
                <tr>
                    <th>
                        Name
                    </th>
                    <th>
                        Surname
                    </th>
                    <th style="text-align:center">
                        CRUD BUTTONS
                    </th>
                </tr>
                @foreach (var item in Model.authors)
                {
                    <tr>
                        <td>
                            @Html.DisplayFor(modelItem => item.name)
                        </td>
                        <td>
                            @Html.DisplayFor(modelItem => item.surname)
                        </td>
                        <td class="text-end" style="text-align:center">
                            <!-- Add text-end class here -->
                            <a href="#" class="btn btn-success edit-link" data-url="@Url.Action("Edit", "authors", new { id = item.authorId })">Edit</a>
                            <a href="#" class="btn btn-danger delete-link" data-url="@Url.Action("Delete", "authors", new { id = item.authorId })">Delete</a>
                        </td>
                    </tr>
                }
            </table>
            <div class="pagination">
                @Html.PagedListPager(Model.authors, page => Url.Action("CombinedMIndex", new { authorsPage = page }))
            </div>
        </div>

        <div class="col-md-6">
            <h3>Types</h3>
            <p>
                <a href="#" class="btn btn-primary create-type-link" data-url="@Url.Action("Create", "types")">Create a new Type</a>
            </p>

            <table class="table" style="width:100%">
                <tr>
                    <th>
                        Name
                    </th>
                    <th style="text-align:center">
                        CRUD BUTTONS
                    </th>
                </tr>
                @foreach (var item in Model.types)
                {
                    <tr>
                        <td>
                            @Html.DisplayFor(modelItem => item.name)
                        </td>
                        <td class="text-end" style="text-align:center">
                            <!-- Add text-end class here -->
                            <a href="#" class="btn btn-success edit-link" data-url="@Url.Action("Edit", "types", new { id = item.typeId })">Edit</a>
                            <a href="#" class="btn btn-danger delete-link" data-url="@Url.Action("Delete", "types", new { id = item.typeId })">Delete</a>
                        </td>
                    </tr>
                }
            </table>
            <div class="pagination">
                @Html.PagedListPager(Model.types, page => Url.Action("CombinedMIndex", new { typesPage = page }))
            </div>
        </div>
    </div>
</body>
<div class="row">
    <div class="col-md-12">
        <h3>Borrowed books</h3>
        <p>
            <a href="#" class="btn btn-primary create-borrow-link" data-url="@Url.Action("Create", "borrows")">Add a new Borrowed Book</a>
        </p>

        <table class="table" style="width:100%">
            <tr>
                <th>
                    Student
                </th>
                <th>
                    Book
                </th>
                <th>
                    Taken Date
                </th>
                <th>
                    Brought Date
                </th>
                <th style="text-align:center">
                    CRUD BUTTONS
                </th>
            </tr>
            @foreach (var item in Model.borrows)
            {
                <tr>
                    <td>
                        @Html.DisplayFor(modelItem => item.student.name)
                    </td>
                    <td>
                        @Html.DisplayFor(modelItem => item.book.name)
                    </td>
                    <td>
                        @Html.DisplayFor(modelItem => item.takenDate)
                    </td>
                    <td>
                        @Html.DisplayFor(modelItem => item.broughtDate)
                    </td>
                    <td class="text-end" style="text-align:center">
                        <!-- Add text-end class here -->
                        <a href="#" class="btn btn-success edit-link" data-url="@Url.Action("Edit", "borrows", new { id = item.borrowId })">Edit</a>
                        <a href="#" class="btn btn-danger delete-link" data-url="@Url.Action("Delete", "borrows", new { id = item.borrowId })">Delete</a>
                    </td>
                </tr>
            }
        </table>
        <div class="pagination">
            @Html.PagedListPager(Model.borrows, page => Url.Action("CombinedMIndex", new { borrowsPage = page }))
        </div>
    </div>
</div>
@*// modal create and the script pushes data into here.*@
<div id="myModal" class="modal fade" tabindex="-1">
    <div class="modal-dialog">
        <div class="modal-content">
            <div class="modal-header">
                <h5 class="modal-title">Sample Async CRUD</h5>
                @*<button type="button" class="btn-close" data-bs-dismiss="modal" aria-label="Close"></button>*@
            </div>
            <div class="modal-body" id="modal-content">
            </div>
        </div>
    </div>
</div>


@*Used to combine the tqo views with the same names.*@
<script>
    $(function () {
        // Function to handle Edit link click event in the Combined View and Details modal
        $(".edit-link, .edit-link-in-modal").click(function (e) {
            e.preventDefault();
            var url = $(this).data("url");

            $.get(url, function (data) {
                $("#modal-content").empty();
                $("#modal-content").html(data);
                $("#myModal").modal("show");
            });
        });

        // Function to handle form submission within the modal, receives the scaffolded views
        $("#modal-content").on("submit", "form", function (e) {
            e.preventDefault();
            var form = $(this);
            var url = form.attr("action");
            var formData = form.serialize();

            $.post(url, formData, function (data) {
                $("#myModal").modal("hide");
                location.reload();
            });
        });

        // Function to handle other links (details, delete, create) within the modal
        $(".delete-link, .create-author-link, .create-type-link, .create-borrow-link").click(function (e) {
            e.preventDefault();
            var url = $(this).data("url");

            $.get(url, function (data) {
                $("#modal-content").empty();
                $("#modal-content").html(data);
                $("#myModal").modal("show");
            });
        });
    });
</script>
